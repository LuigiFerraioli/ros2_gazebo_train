<?xml version="1.0" ?>
<sdf version='1.7'>
   
  <model name='gazebo_train'>
  <pose>0.0 0.0 0.0 0.0 0.0 0.0</pose>
  
    <link name='base_footprint'>
      <inertial>
        <pose>0 0 0 0 0 0</pose>
        <mass>0.001</mass>
        <inertia>
          <ixx>0.001</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.001</iyy>
          <iyz>0</iyz>
          <izz>0.001</izz>
        </inertia>
      </inertial>
    </link>
          
    <link name="base_link">
      <inertial>
        <pose>0 0 0.3 0 0 0</pose>
        <mass>3</mass>
        <inertia>
          <ixx>0.6</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.2</iyy>
          <iyz>0</iyz>
          <izz>0.6</izz>
        </inertia>
      </inertial>
      <collision name='base_footprint_fixed_joint_lump__base_link_collision'>
        <pose>0 0 0.25 0 0 0</pose>
        <geometry>
          <mesh>
            <scale>0.001 0.001 0.001</scale>
            <uri>model://gazebo_train/meshes/waffle_custom_base.stl</uri>
          </mesh>
        </geometry>

      </collision>
      <visual name='base_footprint_fixed_joint_lump__base_link_visual'>
        <pose>0 0 0.25 0 0 0</pose>
        <geometry>
          <mesh>
            <scale>0.001 0.001 0.001</scale>
            <uri>model://gazebo_train/meshes/waffle_custom_base.stl</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <uri>file://media/materials/scripts/gazebo.material</uri>
            <name>Gazebo/Grey</name>
          </script>
        </material>
      </visual>
      <sensor name="hls_lfcd_lds" type="ray">
        <always_on>true</always_on>
        <visualize>false</visualize>
        <pose>0 0 0.74 0 0 0</pose>
        <update_rate>5</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>360</samples>
              <resolution>1.000000</resolution>
              <min_angle>0.000000</min_angle>
              <max_angle>6.280000</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>1</min>
            <max>12</max>
            <resolution>0.015000</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="train_laserscan" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <!-- <namespace>/tb3</namespace> -->
            <remapping>~/out:=scan</remapping>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
          <frame_name>laser_link</frame_name>
        </plugin>
      </sensor>
    </link>

    <joint name="base_joint" type="fixed">
      <parent>base_footprint</parent>
      <child>base_link</child>
      <pose>0.0 0.0 0.3 0 0 0</pose>
    </joint>
  
    <link name="camera_link">
      <inertial>
        <pose> 0 0 0 0 0 0</pose>
        <inertia>
          <ixx>0.0001</ixx>
          <ixy>0.000</ixy>
          <ixz>0.000</ixz>
          <iyy>0.0001</iyy>
          <iyz>0.000</iyz>
          <izz>0.0001</izz>
        </inertia>
        <mass>0.001</mass>
      </inertial>
      <visual name="camera_visual">
        <pose> 0 -0.6 0.57 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://gazebo_train/meshes/webcam.stl</uri>
            <scale>0.0006 0.0006 0.0006</scale>
          </mesh>
        </geometry>
        <material>
          <script>
            <uri>file://media/materials/scripts/gazebo.material</uri>
            <name>Gazebo/DarkGrey</name>
          </script>
        </material>
      </visual>
    </link>

    <link name="camera_lens_link">
    
      <!-- insert camera sensor plugins here -->
      <inertial>
        <pose> 0 0 0 0 0 0</pose>
        <inertia>
          <ixx>0.001</ixx>
          <ixy>0.000</ixy>
          <ixz>0.000</ixz>
          <iyy>0.001</iyy>
          <iyz>0.000</iyz>
          <izz>0.001</izz>
        </inertia>
        <mass>0.001</mass>
      </inertial>
      
      <sensor name="zed2i_depth" type="depth">
        <always_on>1</always_on>
        <update_rate>1</update_rate>
        <pose>0.022 -0.8 0.6 0 0 -1.571</pose>
        <camera name="realsense_depth_camera">
        </camera>
	        <plugin name="zed2i_depth_driver" filename="libgazebo_ros_camera.so">
            <ros>
        <!-- 
              <argument>custom_camera/image_raw:=custom_camera/custom_image</argument>
              <argument>custom_camera/image_depth:=custom_camera/custom_image_depth</argument>
              <argument>custom_camera/camera_info:=custom_camera/custom_info_raw</argument>
              <argument>custom_camera/camera_info_depth:=custom_camera/custom_info_depth</argument>
              <argument>custom_camera/points:=custom_camera/custom_points</argument> 
        -->
            </ros>
            <camera_name>zed2i_depth</camera_name>
            <frame_name>realsense_depth_frame</frame_name>
            <hack_baseline>0.07</hack_baseline>
            <min_depth>0.001</min_depth>
          </plugin>
      </sensor>



      <sensor name="camera" type="camera">
        <always_on>true</always_on>
        <visualize>true</visualize>
        <update_rate>30</update_rate>
        <pose>0 -0.62 0.57 0 0 -1.571</pose>
        <camera name="zed2i_r200">
          <horizontal_fov>1.02974</horizontal_fov>
          <image>
            <width>1920</width>
            <height>1080</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
                  That pixel's noise value is added to each of its color
                  channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
          <plugin name="camera_driver" filename="libgazebo_ros_camera.so">
            <ros>
              <!-- <namespace>test_cam</namespace> -->
              <!-- <remapping>image_raw:=image_demo</remapping> -->
              <!-- <remapping>camera_info:=camera_info_demo</remapping> -->
            </ros>
            <!-- camera_name>omit so it defaults to sensor name</camera_name-->
            <!-- frame_name>omit so it defaults to link name</frameName-->
            <!-- <hack_baseline>0.07</hack_baseline> -->
          </plugin>
      </sensor>
    </link>
      
    <joint name="camera_joint" type="fixed">
      <parent>base_link</parent>
      <child>camera_link</child>
      <pose>0 -0.5 0.53 1.571 0 0</pose>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <joint name="camera_rgb_joint" type="fixed">
      <parent>camera_link</parent>
      <child>camera_lens_link</child>
      <pose>0 -0.5 0.53 1.571 0 0</pose>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>
    
    <link name="imu_link">
      <inertial>
        <pose>0 0 0 0 0 0</pose>
        <mass>0.0001</mass>
        <inertia>
          <ixx>0.002</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.002</iyy>
          <iyz>0</iyz>
          <izz>0.002</izz>
        </inertia>
      </inertial>
      <!-- insert imu sensor plugins here -->
      <sensor name="gazebo_train_imu" type="imu">
        <always_on>true</always_on>
        <update_rate>100</update_rate>
        <imu>
          <angular_velocity>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </z>
          </angular_velocity>
          <linear_acceleration>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </z>
          </linear_acceleration>
        </imu>
        <plugin name="train_imu" filename="libgazebo_ros_imu_sensor.so">
          <ros>
            <!-- <namespace>/tb3</namespace> -->
            <remapping>~/out:=imu</remapping>
          </ros>
        </plugin>
      </sensor>
    </link>
    
    <joint name="imu_joint" type="fixed">
      <parent>base_link</parent>
      <child>imu_link</child>
      <pose>0 0 0.5 0 0 0</pose>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>   
             
    <joint name='wheel_left2_joint' type='revolute'>
      <pose relative_to='base_footprint'>-0.22 0.4 0.1 -1.5708 0 0</pose>
      <parent>base_link</parent>
      <child>wheel_left2_link</child>
      <axis>
        <xyz>1 0 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
      </axis>
    </joint>
    <link name='wheel_left2_link'>
      <pose relative_to='wheel_left2_joint'>0 0 0 0 -0 0</pose>
      <inertial>
        <pose>0 0 0 -1.5708 -0 -1.5708</pose>
        <mass>0.01</mass>
        <inertia>
          <ixx>2.9925e-06</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>2.9925e-06</iyy>
          <iyz>0</iyz>
          <izz>5.445e-06</izz>
        </inertia>
      </inertial>
      <collision name='wheel_left2_link_collision'>
        <pose>0 0 0 -1.5708 0 0</pose>
        <geometry>
          <mesh>
            <scale>0.001 0.001 0.001</scale>
            <uri>model://gazebo_train/meshes/left_tire.stl</uri>
          </mesh>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>100000.0</mu>
              <mu2>100000.0</mu2>
              <fdir1>0 0 0</fdir1>
              <slip1>0.0</slip1>
              <slip2>0.0</slip2>
            </ode>
          </friction>        
    	  <contact>
            <ode>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <kp>1e+5</kp>
              <kd>1</kd>
              <min_depth>0.001</min_depth>
              <max_vel>0.0</max_vel>
           </ode>
        </contact>
      </surface>        
      </collision>
      <visual name='wheel_left2_link_visual'>
        <pose>0 0 0 1.5708 -0 0</pose>
        <geometry>
          <mesh>
            <scale>0.001 0.001 0.001</scale>
            <uri>model://gazebo_train/meshes/left_tire.stl</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <uri>file://media/materials/scripts/gazebo.material</uri>
            <name>Gazebo/Orange</name>
          </script>
        </material>        
      </visual>
    </link>
    <joint name='wheel_left_joint' type='revolute'>
      <pose relative_to='base_footprint'>-0.22 -0.4 0.1 -1.5708 0 0</pose>
      <parent>base_link</parent>
      <child>wheel_left_link</child>
      <axis>
        <xyz>1 0 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
      </axis>
    </joint>
    <link name='wheel_left_link'>
      <pose relative_to='wheel_left_joint'>0 0 0 0 -0 0</pose>
      <inertial>
        <pose>0 0 0 -1.5708 -0 -1.5708</pose>
        <mass>0.01</mass>
        <inertia>
          <ixx>2.9925e-06</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>2.9925e-06</iyy>
          <iyz>0</iyz>
          <izz>5.445e-06</izz>
        </inertia>
      </inertial>
      <collision name='wheel_left_link_collision'>
        <pose>0 0 0 -1.5708 0 0</pose>
        <geometry>
          <mesh>
            <scale>0.001 0.001 0.001</scale>
            <uri>model://gazebo_train/meshes/left_tire.stl</uri>
          </mesh>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>100000.0</mu>
              <mu2>100000.0</mu2>
              <fdir1>0 0 0</fdir1>
              <slip1>0.0</slip1>
              <slip2>0.0</slip2>
            </ode>
          </friction>        
    	  <contact>
            <ode>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <kp>1e+5</kp>
              <kd>1</kd>
              <min_depth>0.001</min_depth>
              <max_vel>0.0</max_vel>
           </ode>
        </contact>
      </surface>        
      </collision>
      <visual name='wheel_left_link_visual'>
        <pose>0 0 0 1.5708 -0 0</pose>
        <geometry>
          <mesh>
            <scale>0.001 0.001 0.001</scale>
            <uri>model://gazebo_train/meshes/left_tire.stl</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <uri>file://media/materials/scripts/gazebo.material</uri>
            <name>Gazebo/Orange</name>
          </script>
        </material>        
      </visual>
    </link>
    <joint name='wheel_right2_joint' type='revolute'>
      <pose relative_to='base_footprint'>0.22 0.4 0.1 -1.5708 -0 -3.14159</pose>
      <parent>base_link</parent>
      <child>wheel_right2_link</child>
      <axis>
        <xyz>-1 0 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
      </axis>
    </joint>
    <link name='wheel_right2_link'>
      <pose relative_to='wheel_right2_joint'>0 0 0 0 -0 0</pose>
      <inertial>
        <pose>0 0 0 -1.5708 0 -1.5708</pose>
        <mass>0.01</mass>
        <inertia>
          <ixx>2.9925e-06</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>2.9925e-06</iyy>
          <iyz>0</iyz>
          <izz>5.445e-06</izz>
        </inertia>
      </inertial>
      <collision name='wheel_right2_link_collision'>
        <pose>0 0 0 -1.5708 0 0</pose>
        <geometry>
          <mesh>
            <scale>0.001 0.001 0.001</scale>
            <uri>model://gazebo_train/meshes/right_tire.stl</uri>
          </mesh>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>100000.0</mu>
              <mu2>100000.0</mu2>
              <fdir1>0 0 0</fdir1>
              <slip1>0.0</slip1>
              <slip2>0.0</slip2>
            </ode>
          </friction>        
    	  <contact>
            <ode>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <kp>1e+5</kp>
              <kd>1</kd>
              <min_depth>0.001</min_depth>
              <max_vel>0.0</max_vel>
           </ode>
        </contact>
      </surface>       
      </collision>
      <visual name='wheel_right2_link_visual'>
        <pose>0 0 0 1.5708 -0 0</pose>
        <geometry>
          <mesh>
            <scale>0.001 0.001 0.001</scale>
            <uri>model://gazebo_train/meshes/right_tire.stl</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <uri>file://media/materials/scripts/gazebo.material</uri>
            <name>Gazebo/Orange</name>
          </script>
        </material>        
      </visual>
    </link>
    <joint name='wheel_right_joint' type='revolute'>
      <pose relative_to='base_footprint'>0.22 -0.4 0.1 -1.5708 -0 -3.14159</pose>
      <parent>base_link</parent>
      <child>wheel_right_link</child>
      <axis>
        <xyz>-1 0 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
      </axis>
    </joint>
    <link name='wheel_right_link'>
      <pose relative_to='wheel_right_joint'>0 0 0 0 -0 0</pose>
      <inertial>
        <pose>0 0 0 -1.5708 -0 -1.5708</pose>
        <mass>0.01</mass>
        <inertia>
          <ixx>2.9925e-06</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>2.9925e-06</iyy>
          <iyz>0</iyz>
          <izz>5.445e-06</izz>
        </inertia>
      </inertial>
      <collision name='wheel_right_link_collision'>
        <pose>0 0 0 -1.5708 0 0</pose>
        <geometry>
          <mesh>
            <scale>0.001 0.001 0.001</scale>
            <uri>model://gazebo_train/meshes/right_tire.stl</uri>
          </mesh>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>100000.0</mu>
              <mu2>100000.0</mu2>
              <fdir1>0 0 0</fdir1>
              <slip1>0.0</slip1>
              <slip2>0.0</slip2>
            </ode>
          </friction>        
    	  <contact>
            <ode>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <kp>1e+5</kp>
              <kd>1</kd>
              <min_depth>0.001</min_depth>
              <max_vel>0.0</max_vel>
           </ode>
        </contact>
      </surface>       
      </collision>
      <visual name='wheel_right_link_visual'>
        <pose>0 0 0 1.5708 -0 0</pose>
        <geometry>
          <mesh>
            <scale>0.001 0.001 0.001</scale>
            <uri>model://gazebo_train/meshes/right_tire.stl</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <uri>file://media/materials/scripts/gazebo.material</uri>
            <name>Gazebo/Orange</name>
          </script>
        </material>        
      </visual>
    </link>
    
    <plugin name="train_diff_drive" filename="libgazebo_ros_diff_drive.so">

      <ros>
        <!-- <namespace>/tb3</namespace> -->
      </ros>

      <update_rate>30</update_rate>

      <!-- wheels -->
      <left_joint>wheel_left_joint</left_joint>
      <right_joint>wheel_right_joint</right_joint>


      <!-- kinematics -->
      <wheel_separation>0.287</wheel_separation>
      <wheel_diameter>0.066</wheel_diameter>

      <!-- limits -->
      <max_wheel_torque>60</max_wheel_torque>
      <max_wheel_acceleration>2.0</max_wheel_acceleration>

      <command_topic>cmd_vel</command_topic>

      <!-- output -->
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>false</publish_wheel_tf>

      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_footprint</robot_base_frame>

    </plugin>
    

    <plugin name="train_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
      <ros>
        <!-- <namespace>/tb3</namespace> -->
        <remapping>~/out:=joint_states</remapping>
      </ros>
      <update_rate>30</update_rate>
      <joint_name>wheel_left_joint</joint_name>
      <joint_name>wheel_left2_joint</joint_name>
      <joint_name>wheel_right_joint</joint_name>
      <joint_name>wheel_right2_joint</joint_name>
    </plugin> 
         	     
  </model>
</sdf>
